From 29e75c9aadefb6ada45481c52a835d812cf46ea2 Mon Sep 17 00:00:00 2001
From: Dallas Strouse <dastrouses@gmail.com>
Date: Sun, 24 Sep 2023 17:07:32 -0500
Subject: [PATCH] backends/native: Main thread rt-scheduler: experimental
 feature no more

To paraphrase jadahl: we have a dedicated KMS thread now, which also
has realtime scheduling enabled unconditionally. realtime scheduling
on the main thread isn't too great of an idea, considering GC can
take a hot minute.

And to quote rmader: we most likely won't be able to make the main
thread rt as long as we use GJS and thus have GC.

So let's get rid of it! It's just been breaking things anyways.

Signed-off-by: Dallas Strouse <dastrouses@gmail.com>
---
 data/org.gnome.mutter.gschema.xml.in      |  6 +---
 src/backends/meta-settings-private.h      |  3 +-
 src/backends/meta-settings.c              |  2 --
 src/backends/native/meta-backend-native.c | 35 -----------------------
 4 files changed, 2 insertions(+), 44 deletions(-)

diff --git a/data/org.gnome.mutter.gschema.xml.in b/data/org.gnome.mutter.gschema.xml.in
index 5d56ae2d377..fa8cf95dd87 100644
--- a/data/org.gnome.mutter.gschema.xml.in
+++ b/data/org.gnome.mutter.gschema.xml.in
@@ -3,8 +3,7 @@
   <flags id="org.gnome.mutter.MetaExperimentalFeature">
     <value nick="scale-monitor-framebuffer" value="1"/>
     <value nick="kms-modifiers" value="2"/>
-    <value nick="rt-scheduler" value="4"/>
-    <value nick="autoclose-xwayland" value="8"/>
+    <value nick="autoclose-xwayland" value="4"/>
   </flags>
 
   <schema id="org.gnome.mutter" path="/org/gnome/mutter/"
@@ -126,9 +125,6 @@
                                         supported by the driver. Requires a
                                         restart.
 
-        • “rt-scheduler”              — makes mutter request a low priority
-                                        real-time scheduling. Requires a restart.
-
         • “autoclose-xwayland”        — automatically terminates Xwayland if all
                                         relevant X11 clients are gone.
                                         Requires a restart.
diff --git a/src/backends/meta-settings-private.h b/src/backends/meta-settings-private.h
index c3768c8acde..52501867e50 100644
--- a/src/backends/meta-settings-private.h
+++ b/src/backends/meta-settings-private.h
@@ -30,8 +30,7 @@ typedef enum _MetaExperimentalFeature
   META_EXPERIMENTAL_FEATURE_NONE = 0,
   META_EXPERIMENTAL_FEATURE_SCALE_MONITOR_FRAMEBUFFER = (1 << 0),
   META_EXPERIMENTAL_FEATURE_KMS_MODIFIERS  = (1 << 1),
-  META_EXPERIMENTAL_FEATURE_RT_SCHEDULER = (1 << 2),
-  META_EXPERIMENTAL_FEATURE_AUTOCLOSE_XWAYLAND  = (1 << 3),
+  META_EXPERIMENTAL_FEATURE_AUTOCLOSE_XWAYLAND  = (1 << 2),
 } MetaExperimentalFeature;
 
 typedef enum _MetaXwaylandExtension
diff --git a/src/backends/meta-settings.c b/src/backends/meta-settings.c
index 1e107b0a789..486ac5abb7f 100644
--- a/src/backends/meta-settings.c
+++ b/src/backends/meta-settings.c
@@ -292,8 +292,6 @@ experimental_features_handler (GVariant *features_variant,
         feature = META_EXPERIMENTAL_FEATURE_SCALE_MONITOR_FRAMEBUFFER;
       else if (g_str_equal (feature_str, "kms-modifiers"))
         feature = META_EXPERIMENTAL_FEATURE_KMS_MODIFIERS;
-      else if (g_str_equal (feature_str, "rt-scheduler"))
-        feature = META_EXPERIMENTAL_FEATURE_RT_SCHEDULER;
       else if (g_str_equal (feature_str, "autoclose-xwayland"))
         feature = META_EXPERIMENTAL_FEATURE_AUTOCLOSE_XWAYLAND;
 
diff --git a/src/backends/native/meta-backend-native.c b/src/backends/native/meta-backend-native.c
index f01890460c8..7547f11a0cf 100644
--- a/src/backends/native/meta-backend-native.c
+++ b/src/backends/native/meta-backend-native.c
@@ -216,41 +216,6 @@ meta_backend_native_post_init (MetaBackend *backend)
 
   META_BACKEND_CLASS (meta_backend_native_parent_class)->post_init (backend);
 
-  if (meta_settings_is_experimental_feature_enabled (settings,
-                                                     META_EXPERIMENTAL_FEATURE_RT_SCHEDULER))
-    {
-      g_autoptr (MetaDBusRealtimeKit1) rtkit_proxy = NULL;
-      g_autoptr (GError) error = NULL;
-
-      rtkit_proxy =
-        meta_dbus_realtime_kit1_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
-                                                        G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES |
-                                                        G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS |
-                                                        G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
-                                                        "org.freedesktop.RealtimeKit1",
-                                                        "/org/freedesktop/RealtimeKit1",
-                                                        NULL,
-                                                        &error);
-
-      if (rtkit_proxy)
-        {
-          uint32_t priority;
-
-          priority = sched_get_priority_min (SCHED_RR);
-          meta_dbus_realtime_kit1_call_make_thread_realtime_sync (rtkit_proxy,
-                                                                  gettid (),
-                                                                  priority,
-                                                                  NULL,
-                                                                  &error);
-        }
-
-      if (error)
-        {
-          g_dbus_error_strip_remote_error (error);
-          g_message ("Failed to set RT scheduler: %s", error->message);
-        }
-    }
-
 #ifdef HAVE_REMOTE_DESKTOP
   maybe_disable_screen_cast_dma_bufs (backend_native);
 #endif
-- 
GitLab

